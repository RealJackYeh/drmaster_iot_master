[{"id":"befd3ce63fe5db97","type":"tab","label":"Flow 1","disabled":false,"info":"","env":[]},{"id":"b3ae672071b9948c","type":"inject","z":"befd3ce63fe5db97","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":420,"wires":[["fc651c678ad6caa1"]]},{"id":"fc651c678ad6caa1","type":"python-function","z":"befd3ce63fe5db97","name":"","func":"# this is to be saved in the local folder under the name \"mpu9250_i2c.py\"\n\n# it will be used as the I2C controller and function harbor for the project\n\n# refer to datasheet and register map for full explanation\n\n \n\nimport smbus,time\n\n \n\ndef MPU6050_start():\n\n    # alter sample rate (stability)\n\n    samp_rate_div = 0 # sample rate = 8 kHz/(1+samp_rate_div)\n\n    bus.write_byte_data(MPU6050_ADDR, SMPLRT_DIV, samp_rate_div)\n\n    time.sleep(0.1)\n\n    # reset all sensors\n\n    bus.write_byte_data(MPU6050_ADDR,PWR_MGMT_1,0x00)\n\n    time.sleep(0.1)\n\n    # power management and crystal settings\n\n    bus.write_byte_data(MPU6050_ADDR, PWR_MGMT_1, 0x01)\n\n    time.sleep(0.1)\n\n    #Write to Configuration register\n\n    bus.write_byte_data(MPU6050_ADDR, CONFIG, 0)\n\n    time.sleep(0.1)\n\n    #Write to Gyro configuration register\n\n    gyro_config_sel = [0b00000,0b010000,0b10000,0b11000] # byte registers\n\n    gyro_config_vals = [250.0,500.0,1000.0,2000.0] # degrees/sec\n\n    gyro_indx = 0\n\n    bus.write_byte_data(MPU6050_ADDR, GYRO_CONFIG, int(gyro_config_sel[gyro_indx]))\n\n    time.sleep(0.1)\n\n    #Write to Accel configuration register\n\n    accel_config_sel = [0b00000,0b01000,0b10000,0b11000] # byte registers\n\n    accel_config_vals = [2.0,4.0,8.0,16.0] # g (g = 9.81 m/s^2)\n\n    accel_indx = 0                           \n\n    bus.write_byte_data(MPU6050_ADDR, ACCEL_CONFIG, int(accel_config_sel[accel_indx]))\n\n    time.sleep(0.1)\n\n    # interrupt register (related to overflow of data [FIFO])\n\n    bus.write_byte_data(MPU6050_ADDR, INT_ENABLE, 1)\n\n    time.sleep(0.1)\n\n    return gyro_config_vals[gyro_indx],accel_config_vals[accel_indx]\n\n   \n\ndef read_raw_bits(register):\n\n    # read accel and gyro values\n\n    high = bus.read_byte_data(MPU6050_ADDR, register)\n\n    low = bus.read_byte_data(MPU6050_ADDR, register+1)\n\n \n\n    # combine higha and low for unsigned bit value\n\n    value = ((high << 8) | low)\n\n   \n\n    # convert to +- value\n\n    if(value > 32768):\n\n        value -= 65536\n\n    return value\n\n \n\ndef mpu6050_conv():\n\n    # raw acceleration bits\n\n    acc_x = read_raw_bits(ACCEL_XOUT_H)\n\n    acc_y = read_raw_bits(ACCEL_YOUT_H)\n\n    acc_z = read_raw_bits(ACCEL_ZOUT_H)\n\n \n\n    # raw temp bits\n\n##    t_val = read_raw_bits(TEMP_OUT_H) # uncomment to read temp\n\n   \n\n    # raw gyroscope bits\n\n    gyro_x = read_raw_bits(GYRO_XOUT_H)\n\n    gyro_y = read_raw_bits(GYRO_YOUT_H)\n\n    gyro_z = read_raw_bits(GYRO_ZOUT_H)\n\n \n\n    #convert to acceleration in g and gyro dps\n\n    a_x = (acc_x/(2.0**15.0))*accel_sens\n\n    a_y = (acc_y/(2.0**15.0))*accel_sens\n\n    a_z = (acc_z/(2.0**15.0))*accel_sens\n\n \n\n    w_x = (gyro_x/(2.0**15.0))*gyro_sens\n\n    w_y = (gyro_y/(2.0**15.0))*gyro_sens\n\n    w_z = (gyro_z/(2.0**15.0))*gyro_sens\n\n \n\n##    temp = ((t_val)/333.87)+21.0 # uncomment and add below in return\n\n    return a_x,a_y,a_z,w_x,w_y,w_z\n\n \n\ndef AK8963_start():\n\n    bus.write_byte_data(AK8963_ADDR,AK8963_CNTL,0x00)\n\n    time.sleep(0.1)\n\n    AK8963_bit_res = 0b0001 # 0b0001 = 16-bit\n\n    AK8963_samp_rate = 0b0110 # 0b0010 = 8 Hz, 0b0110 = 100 Hz\n\n    AK8963_mode = (AK8963_bit_res <<4)+AK8963_samp_rate # bit conversion\n\n    bus.write_byte_data(AK8963_ADDR,AK8963_CNTL,AK8963_mode)\n\n    time.sleep(0.1)\n\n   \n\ndef AK8963_reader(register):\n\n    # read magnetometer values\n\n    low = bus.read_byte_data(AK8963_ADDR, register-1)\n\n    high = bus.read_byte_data(AK8963_ADDR, register)\n\n    # combine higha and low for unsigned bit value\n\n    value = ((high << 8) | low)\n\n    # convert to +- value\n\n    if(value > 32768):\n\n        value -= 65536\n\n    return value\n\n \n\ndef AK8963_conv():\n\n    # raw magnetometer bits\n\n \n\n    loop_count = 0\n\n    while 1:\n\n        mag_x = AK8963_reader(HXH)\n\n        mag_y = AK8963_reader(HYH)\n\n        mag_z = AK8963_reader(HZH)\n\n \n\n        # the next line is needed for AK8963\n\n        if bin(bus.read_byte_data(AK8963_ADDR,AK8963_ST2))=='0b10000':\n\n            break\n\n        loop_count+=1\n\n       \n\n    #convert to acceleration in g and gyro dps\n\n    m_x = (mag_x/(2.0**15.0))*mag_sens\n\n    m_y = (mag_y/(2.0**15.0))*mag_sens\n\n    m_z = (mag_z/(2.0**15.0))*mag_sens\n\n \n\n    return m_x,m_y,m_z\n\n   \n\n# MPU6050 Registers\n\nMPU6050_ADDR = 0x68\n\nPWR_MGMT_1   = 0x6B\n\nSMPLRT_DIV   = 0x19\n\nCONFIG       = 0x1A\n\nGYRO_CONFIG  = 0x1B\n\nACCEL_CONFIG = 0x1C\n\nINT_ENABLE   = 0x38\n\nACCEL_XOUT_H = 0x3B\n\nACCEL_YOUT_H = 0x3D\n\nACCEL_ZOUT_H = 0x3F\n\nTEMP_OUT_H   = 0x41\n\nGYRO_XOUT_H  = 0x43\n\nGYRO_YOUT_H  = 0x45\n\nGYRO_ZOUT_H  = 0x47\n\n#AK8963 registers\n\nAK8963_ADDR   = 0x0C\n\nAK8963_ST1    = 0x02\n\nHXH          = 0x04\n\nHYH          = 0x06\n\nHZH          = 0x08\n\nAK8963_ST2   = 0x09\n\nAK8963_CNTL  = 0x0A\n\nmag_sens = 4900.0 # magnetometer sensitivity: 4800 uT\n\n \n\n# start I2C driver\n\nbus = smbus.SMBus(1) # start comm with i2c bus\n\ngyro_sens,accel_sens = MPU6050_start() # instantiate gyro/accel\n\nAK8963_start() # instantiate magnetometer\n\nax,ay,az,wx,wy,wz = mpu6050_conv() # read and convert mpu6050 data\nmx,my,mz = AK8963_conv() # read and convert AK8963 magnetometer data\nmsg['payload'] = {\"acc_x\": ax, \"acc_y\":ay, \"acc_z\":az,\n    \"gy_x\": wx, \"gy_y\": wy, \"gy_z\": wz, \"mag_x\": mx, \"mag_y\": my, \"mag_z\": mz }\n\n\n#    print('{}'.format('-'*30))\n\n#    print('accel [g]: x = {0:2.2f}, y = {1:2.2f}, z {2:2.2f}= '.format(ax,ay,az))\n\n#    print('gyro [dps]:  x = {0:2.2f}, y = {1:2.2f}, z = {2:2.2f}'.format(wx,wy,wz))\n\n#    print('mag [uT]:   x = {0:2.2f}, y = {1:2.2f}, z = {2:2.2f}'.format(mx,my,mz))\n\n#    print('{}'.format('-'*30))\n\n#    time.sleep(1)\nreturn msg","outputs":1,"x":380,"y":420,"wires":[["8cec3be054fed9ea","274a3cc183dd7c83","1c458329b30b16be","694c01469e86e550","ca68bca160b93d81","273ac22a0ece6ddd","48550954a3c75c9b","d646ab789688fda4","0a823b42bd0f4de2"]]},{"id":"445b166a16983769","type":"ui_chart","z":"befd3ce63fe5db97","name":"","group":"2f38f22e7b5f4fa4","order":1,"width":0,"height":0,"label":"Acc_xyz","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"-3","ymax":"3","removeOlder":"30","removeOlderPoints":"","removeOlderUnit":"1","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":880,"y":260,"wires":[[]]},{"id":"8cec3be054fed9ea","type":"function","z":"befd3ce63fe5db97","name":"function 1","func":"msg.payload = msg.payload.acc_x\nmsg.topic = 'Acc_x'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":220,"wires":[["445b166a16983769"]]},{"id":"274a3cc183dd7c83","type":"function","z":"befd3ce63fe5db97","name":"function 2","func":"msg.payload = msg.payload.acc_y\nmsg.topic = 'Acc_y'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":260,"wires":[["445b166a16983769"]]},{"id":"1c458329b30b16be","type":"function","z":"befd3ce63fe5db97","name":"function 3","func":"msg.payload = msg.payload.acc_z\nmsg.topic = 'Acc_z'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":300,"wires":[["445b166a16983769"]]},{"id":"694c01469e86e550","type":"function","z":"befd3ce63fe5db97","name":"function 4","func":"msg.payload = msg.payload.gy_x\nmsg.topic = 'Gyro_x'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":380,"wires":[["d948c6af2aacde68"]]},{"id":"ca68bca160b93d81","type":"function","z":"befd3ce63fe5db97","name":"function 5","func":"msg.payload = msg.payload.gy_y\nmsg.topic = 'Gyro_y'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":420,"wires":[["d948c6af2aacde68"]]},{"id":"273ac22a0ece6ddd","type":"function","z":"befd3ce63fe5db97","name":"function 6","func":"msg.payload = msg.payload.gy_z\nmsg.topic = 'Gyro_z'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":460,"wires":[["d948c6af2aacde68"]]},{"id":"48550954a3c75c9b","type":"function","z":"befd3ce63fe5db97","name":"function 7","func":"msg.payload = msg.payload.mag_x\nmsg.topic = 'Mag_x'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":540,"wires":[["9498b8f56475c74d"]]},{"id":"d646ab789688fda4","type":"function","z":"befd3ce63fe5db97","name":"function 8","func":"msg.payload = msg.payload.mag_y\nmsg.topic = 'Mag_y'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":580,"wires":[["9498b8f56475c74d"]]},{"id":"0a823b42bd0f4de2","type":"function","z":"befd3ce63fe5db97","name":"function 9","func":"msg.payload = msg.payload.mag_z\nmsg.topic = 'Mag_z'\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":620,"wires":[["9498b8f56475c74d"]]},{"id":"d948c6af2aacde68","type":"ui_chart","z":"befd3ce63fe5db97","name":"","group":"2f38f22e7b5f4fa4","order":2,"width":0,"height":0,"label":"Gyro_xyz","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"-1000","ymax":"1000","removeOlder":"30","removeOlderPoints":"","removeOlderUnit":"1","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":880,"y":420,"wires":[[]]},{"id":"9498b8f56475c74d","type":"ui_chart","z":"befd3ce63fe5db97","name":"","group":"2f38f22e7b5f4fa4","order":3,"width":0,"height":0,"label":"Mag_xyz","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"-1000","ymax":"1000","removeOlder":"30","removeOlderPoints":"","removeOlderUnit":"1","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":880,"y":580,"wires":[[]]},{"id":"2f38f22e7b5f4fa4","type":"ui_group","name":"Default","tab":"9d53d2a120b5d7ae","order":1,"disp":true,"width":"10","collapse":false,"className":""},{"id":"9d53d2a120b5d7ae","type":"ui_tab","name":"Home","icon":"dashboard","disabled":false,"hidden":false}]